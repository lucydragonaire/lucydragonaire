#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define VITESSE 5
// Structure pour représenter un fruit
struct Fruit {
    char nom[20];  // Nom du fruit
    char couleur[20]; // Couleur du fruit
    int taille;    // Taille du fruit en unités arbitraires
    int posX;      // Position en X
    int posY;      // Position en Y
    int chute;     // Indique si le fruit est en train de chuter (1 pour vrai, 0 pour faux)
    int largeur;   // Indique le pixel rectangle sa largeur
    int hauteur;   // Indique le pixel rectangle sa hauteur
};

// Tailles prédéfinies pour chaque type de fruit
const int TAILLE_PASTEQUE = 10;
const int TAILLE_ANANAS = 8;
const int TAILLE_ORANGE = 7;
const int TAILLE_POMME = 6;
const int TAILLE_PEACHE = 5;
const int TAILLE_KIWI = 4;   // Taille du kiwi (2 carrés)
const int TAILLE_FRAISE = 3; // Taille de la fraise (1 carré)

// Fonction pour initialiser la position initiale des fruits en haut au milieu de la pastèque
void positionInitiale(struct Fruit *fruit, int taillePastequeX, int taillePastequeY, int largeur, int hauteur) {
    fruit->posX = taillePastequeX / 2; // Position en X au milieu de la pastèque
    fruit->posY = 0;                    // Position en Y tout en haut de la pastèque
    fruit->largeur = largeur;           // Définition de la largeur du fruit
    fruit->hauteur = hauteur;           // Définition de la hauteur du fruit
}
// Fonction pour simuler la chute d'un fruit
void chuteFruit(struct Fruit *fruit, int vitesschute) {
    if (fruit->chute) {
        // Déplacer le fruit vers le bas en fonction de la vitesse de chute
        fruit->posY += vitesschute;
    }
}
// Fonction pour afficher le classement des fruits
void afficherClassementFruits() {
    // Tableau des noms de fruits
  char nomsFruits[7][20] = {"Fraise", "Kiwi", "Peache", "Pomme","Orange",  "Ananas", "Pasteque"};

    // Tableau des tailles des fruits
    int taillesFruits[7] = {TAILLE_FRAISE, TAILLE_KIWI,TAILLE_PEACHE,TAILLE_POMME,TAILLE_ORANGE,TAILLE_ANANAS,TAILLE_PASTEQUE};

  // Tableau des couleurs des fruits
  char couleursFruits[7][20] = {"rose", "vert claire", "Kaki", "rouge", "orange", "jaune", "vert"};

  // Affichage du classement des fruits avec leurs couleurs
  printf("\nClassement des fruits :\n");
  for (int i = 0; i < 7; i++) {
      printf("%d. %s (taille : %d, couleur : %s)\n", i + 1, nomsFruits[i], taillesFruits[i], couleursFruits[i]);
    }
}

int main() {
  
    // Initialisation de la graine pour la génération de nombres aléatoires
    srand(time(NULL));

    // Déclaration des fruits
  struct Fruit pasteque = {"Pasteque", TAILLE_PASTEQUE,0, 0, 0, 0}; 
  struct Fruit ananas = {"Ananas", TAILLE_ANANAS, 0,0, 0, 0};
  struct Fruit orange = {"Orange", TAILLE_ORANGE, 0,0, 0, 0};
  struct Fruit pomme = {"Pomme", TAILLE_POMME, 0,0, 0, 0};
  struct Fruit peche = {"Pêche", TAILLE_PEACHE,0, 0, 0, 0};
    struct Fruit kiwi = {"Kiwi", TAILLE_KIWI, 0, 0, 0, 0, 0};     // Kiwi avec une taille de 2 carrés
    struct Fruit fraise = {"Fraise", TAILLE_FRAISE, 0, 0, 0, 0, 0}; // Fraise avec une taille de 1 carré

    // Définition de la taille de la pastèque
    const int taillePastequeX = 10; // Largeur de la pasteque
    const int taillePastequeY = 10; // Hauteur de la pasteque
    const int largeur = 10;        // Largeur d'un carré
    const int hauteur = 10;        // Hauteur d'un carré

    // Initialisation de la position initiale des fruits
    positionInitiale(&pasteque, taillePastequeX, taillePastequeY,largeur * TAILLE_PASTEQUE, hauteur * TAILLE_PASTEQUE);
    positionInitiale(&ananas, taillePastequeX, taillePastequeY,largeur *TAILLE_ANANAS,hauteur*TAILLE_ANANAS);
    positionInitiale(&orange, taillePastequeX, taillePastequeY,largeur *TAILLE_ORANGE,hauteur*TAILLE_ORANGE);
    positionInitiale(&pomme, taillePastequeX, taillePastequeY,largeur *TAILLE_POMME,hauteur*TAILLE_POMME);
    positionInitiale(&peche, taillePastequeX, taillePastequeY,largeur *TAILLE_PEACHE,hauteur*TAILLE_PEACHE);
    positionInitiale(&kiwi, taillePastequeX, taillePastequeY, largeur * TAILLE_KIWI, hauteur * TAILLE_KIWI);
    positionInitiale(&fraise, taillePastequeX, taillePastequeY, largeur * TAILLE_FRAISE, hauteur * TAILLE_FRAISE);

    // Simuler la chute des fruits
    pasteque.chute = 1;   // Déclencher la chute de la pastèque
    chuteFruit(&pasteque,VITESSE);
    ananas.chute = 1;     // Déclencher la chute de l'ananas
    chuteFruit(&ananas, VITESSE);
    orange.chute = 1;     // Déclencher la chute de l'orange
    chuteFruit(&orange,VITESSE);
    pomme.chute = 1;      // Déclencher la chute de la pomme
    chuteFruit(&pomme, VITESSE);
    peche.chute = 1;      // Déclencher la chute de la pêche
    chuteFruit(&peche, VITESSE);
    kiwi.chute = 1;       // Déclencher la chute du kiwi
    chuteFruit(&kiwi,VITESSE);
    fraise.chute = 1;     // Déclencher la chute de la fraise
    chuteFruit(&fraise, VITESSE);

    // Affichage des positions des fruits
  printf("Position de la pastèque : (%d, %d, %d, %d)\n", pasteque.posX, pasteque.posY, largeur * TAILLE_PASTEQUE, hauteur * TAILLE_PASTEQUE);
  printf("Position de l'ananas : (%d, %d, %d, %d)\n", ananas.posX, ananas.posY,largeur *TAILLE_ANANAS,hauteur*TAILLE_ANANAS);
  printf("Position de l'orange : (%d, %d, %d, %d)\n", orange.posX, orange.posY,largeur *TAILLE_ORANGE,hauteur*TAILLE_ORANGE);
  printf("Position de la pomme : (%d, %d, %d, %d)\n", pomme.posX, pomme.posY,largeur *TAILLE_POMME,hauteur*TAILLE_POMME);
  printf("Position de la pêche : (%d, %d, %d, %d)\n", peche.posX, peche.posY,largeur *TAILLE_PEACHE,hauteur*TAILLE_PEACHE);
    printf("Position du kiwi : (%d, %d, %d, %d)\n", kiwi.posX, kiwi.posY, largeur * TAILLE_KIWI, hauteur * TAILLE_KIWI);
    printf("Position de la fraise : (%d, %d, %d, %d)\n", fraise.posX, fraise.posY, largeur * TAILLE_FRAISE, hauteur * TAILLE_FRAISE);

    // Appel de la fonction pour afficher le classement des fruits
    afficherClassementFruits();

    return 0;
}

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Structure pour représenter un fruit
struct Fruit {
    char nom[20];  // Nom du fruit
    int taille;    // Taille du fruit en unités arbitraires
    int posX;      // Position en X
    int posY;      // Position en Y
    int chute;     // Indique si le fruit est en train de chuter (1 pour vrai, 0 pour faux)
    int largeur;   // Indique le pixel rectangle sa largeur
    int hauteur;   // Indique le pixel rectangle sa hauteur
};

// Tailles prédéfinies pour chaque type de fruit
const int TAILLE_KIWI = 4;   // Taille du kiwi (2 carrés)
const int TAILLE_FRAISE = 2; // Taille de la fraise (1 carré)

// Fonction pour initialiser la position initiale des fruits en haut au milieu de la pastèque
void positionInitiale(struct Fruit *fruit, int taillePastequeX, int taillePastequeY, int largeur, int hauteur) {
    fruit->posX = taillePastequeX / 2; // Position en X au milieu de la pastèque
    fruit->posY = 0;                    // Position en Y tout en haut de la pastèque
    fruit->largeur = largeur;           // Définition de la largeur du fruit
    fruit->hauteur = hauteur;           // Définition de la hauteur du fruit
}
// Fonction pour simuler la chute d'un fruit
void chuteFruit(struct Fruit *fruit, int vitesseChute) {
    if (fruit->chute) {
        // Déplacer le fruit vers le bas en fonction de la vitesse de chute
        fruit->posY += vitesseChute;
    }
}
// Fonction pour afficher le classement des fruits
void afficherClassementFruits() {
    // Tableau des noms de fruits
    char nomsFruits[2][20] = {"Fraise", "Kiwi"};

    // Tableau des tailles des fruits
    int taillesFruits[2] = {TAILLE_FRAISE, TAILLE_KIWI};

    // Affichage du classement des fruits
    printf("\nClassement des fruits :\n");
    for (int i = 0; i < 2; i++) {
        printf("%d. %s (taille : %d)\n", i+1, nomsFruits[i], taillesFruits[i]);
    }
}

int main() {
    // Initialisation de la graine pour la génération de nombres aléatoires
    srand(time(NULL));

    // Déclaration des fruits
    struct Fruit kiwi = {"Kiwi", TAILLE_KIWI, 0, 0, 0, 100, 100};     // Kiwi avec une taille de 2 carrés
    struct Fruit fraise = {"Fraise", TAILLE_FRAISE, 0, 0, 0, 100, 100}; // Fraise avec une taille de 1 carré

    // Définition de la taille de la pastèque
    const int taillePastequeX = 10; // Largeur de la pastèque
    const int taillePastequeY = 10; // Hauteur de la pastèque
    const int largeur = 10;        // Largeur d'un carré
    const int hauteur = 10;        // Hauteur d'un carré

    // Initialisation de la position initiale des fruits
    positionInitiale(&kiwi, taillePastequeX, taillePastequeY, largeur * TAILLE_KIWI, hauteur * TAILLE_KIWI);
    positionInitiale(&fraise, taillePastequeX, taillePastequeY, largeur * TAILLE_FRAISE, hauteur * TAILLE_FRAISE);

    // Simuler la chute des fruits
    int vitesseChute = 1; // Vitesse de chute des fruits
    kiwi.chute = 1;       // Déclencher la chute du kiwi
    chuteFruit(&kiwi, vitesseChute);
    fraise.chute = 1;     // Déclencher la chute de la fraise
    chuteFruit(&fraise, vitesseChute);

    // Affichage des positions des fruits
    printf("Position du kiwi : (%d, %d, %d, %d)\n", kiwi.posX, kiwi.posY, largeur * TAILLE_KIWI, hauteur * TAILLE_KIWI);
    printf("Position de la fraise : (%d, %d, %d, %d)\n", fraise.posX, fraise.posY, largeur * TAILLE_FRAISE, hauteur * TAILLE_FRAISE);

    // Appel de la fonction pour afficher le classement des fruits
    afficherClassementFruits();

    return 0;
}
